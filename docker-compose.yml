version: '3.9'

services:
  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G

  # Celery Worker for AI Music Processing
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: music-celery:latest
    volumes:
      - ./:/app
      - ./credentials:/app/credentials:ro
      - uploaded_tracks:/app/uploaded_tracks
      - generated_tracks:/app/generated_tracks
      - temp_stems:/app/temp_stems
      - huggingface_cache:/root/.cache/huggingface
      - uv_cache:/root/.cache/uv
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
    depends_on:
      redis:
        condition: service_healthy
    command: python -m celery -A app.celeryworker.worker.celery_app worker --loglevel=info -Q celery,stem_separation,feature_extraction,generate_fusion,enhance_audio
    deploy:
      resources:
        limits:
          memory: 8G

  # Flower for monitoring Celery tasks
  flower:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: music-flower:latest
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://redis:${REDIS_PORT}/0
    ports:
      - "${FLOWER_PORT}:5555"
    depends_on:
      redis:
        condition: service_healthy
    command: python -m celery -A app.celeryworker.worker.celery_app flower --port=5555
    deploy:
      resources:
        limits:
          memory: 1G

volumes:
  redis_data:
  postgres_data:
  uploaded_tracks:
  generated_tracks:
  temp_stems:
  huggingface_cache:
  uv_cache: