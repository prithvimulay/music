"""updated_fusion_tracks_table

Revision ID: f207d487b4d5
Revises: 1c56b0f0f04f
Create Date: 2025-05-16 16:59:44.682752

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f207d487b4d5'
down_revision: Union[str, None] = '1c56b0f0f04f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_table('audio_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('gdrive_file_id', sa.String(), nullable=False),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_fusion', sa.Boolean(), nullable=True),
    sa.Column('source_track1_id', sa.Integer(), nullable=True),
    sa.Column('source_track2_id', sa.Integer(), nullable=True),
    sa.Column('fusion_metadata', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['proj_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['source_track1_id'], ['audio_files.id'], ),
    sa.ForeignKeyConstraint(['source_track2_id'], ['audio_files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audio_files_id'), 'audio_files', ['id'], unique=False)
    op.create_table('fusions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('track1_id', sa.Integer(), nullable=False),
    sa.Column('track2_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('prompt_guidance', sa.Float(), nullable=False),
    sa.Column('custom_prompt', sa.Text(), nullable=True),
    sa.Column('generated_prompt', sa.Text(), nullable=True),
    sa.Column('output_filename', sa.String(), nullable=True),
    sa.Column('output_path', sa.String(), nullable=True),
    sa.Column('gdrive_file_id', sa.String(), nullable=True),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('output_track_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['output_track_id'], ['audio_files.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['track1_id'], ['audio_files.id'], ),
    sa.ForeignKeyConstraint(['track2_id'], ['audio_files.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fusions_id'), 'fusions', ['id'], unique=False)
    op.drop_index('ix_audiofile_id', table_name='audiofile')
    op.drop_table('audiofile')
    op.drop_index('ix_project_id', table_name='project')
    op.drop_index('ix_project_name', table_name='project')
    op.drop_table('project')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('project_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='project_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='project_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_project_name', 'project', ['name'], unique=False)
    op.create_index('ix_project_id', 'project', ['id'], unique=False)
    op.create_table('audiofile',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('gdrive_file_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mime_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('upload_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_fusion', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('source_track1_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source_track2_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fusion_metadata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='audiofile_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='audiofile_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='audiofile_pkey'),
    sa.UniqueConstraint('gdrive_file_id', name='audiofile_gdrive_file_id_key')
    )
    op.create_index('ix_audiofile_id', 'audiofile', ['id'], unique=False)
    op.drop_index(op.f('ix_fusions_id'), table_name='fusions')
    op.drop_table('fusions')
    op.drop_index(op.f('ix_audio_files_id'), table_name='audio_files')
    op.drop_table('audio_files')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
